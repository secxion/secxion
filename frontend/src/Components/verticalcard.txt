import React, { useContext } from "react";
import { Link } from "react-router-dom";
import scrollTop from "../helpers/scrollTop";
import Context from "../Context";
import addToCart from "../helpers/addToCart";
import { motion } from "framer-motion";

const VerticalCard = ({ loading, data = [] }) => {
  const loadingList = new Array(8).fill(null);
  const { fetchUserAddToCart } = useContext(Context);

  const handleAddToCart = async (e, id) => {
    await addToCart(e, id);
    fetchUserAddToCart();
  };

  if (!Array.isArray(data)) {
    console.error("The 'data' prop is not an array:", data);
    return <p className="text-red-500">Error: Unable to display products.</p>;
  }

  return (
    <>
      {loading
        ? loadingList.map((_, index) => (
            <div
              key={index}
              className="bg-white p-4 rounded-lg shadow animate-pulse"
            >
              <div className="h-32 bg-gray-200 rounded-md mb-4"></div>
              <div className="h-6 bg-gray-200 rounded-md mb-2"></div>
              <div className="h-4 bg-gray-200 rounded-md"></div>
            </div>
          ))
        : data.map((product) => (
            <motion.div
              key={product._id}
              initial={{ scale: 0.9, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              whileHover={{ scale: 1.05 }}
              className="bg-white p-4 rounded-lg shadow-lg transition-transform"
            >
              <Link to={`/product/${product._id}`} onClick={scrollTop}>
                <div className="h-40 overflow-hidden rounded-lg mb-4 bg-gray-100 flex items-center justify-center">
                  <img
                    src={product.productImage?.[0]}
                    alt={product.productName}
                    className="h-full w-full object-contain"
                  />
                </div>
                <h3 className="font-medium text-sm md:text-base text-black line-clamp-2">
                  {product.productName}
                </h3>
                {/* <div className="text-red-600 font-medium text-sm md:text-base">
                  ${product.sellingPrice?.toFixed(2)}
                </div> */}
                {/* {product.facevalue && (
                  <div className="text-gray-500 line-through text-sm">
                    ${product.facevalue.toFixed(2)}
                  </div>
                )} */}
              </Link>
              {/* <button
                onClick={(e) => handleAddToCart(e, product._id)}
                className="mt-2 w-full bg-blue-500 hover:bg-blue-600 text-white text-sm px-4 py-2 rounded-lg"
              >
                Add to Cart
              </button> */}
            </motion.div>
          ))}
    </>
  );
};

export default VerticalCard;
